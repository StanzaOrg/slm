#use-added-syntax(tests)
defpackage slm/tests/conan-utils:
  import core
  import slm/conan-utils

deftest(conan online) test-fetch-conan-package:

  val cv = ConanVersion("pcre", "8.45", "125d5f684fea10391ff4cbcd809a5c74", "139391a944851d9dacf1138cff94b3320d5775dd", "ce6f2349e761f6350cbde62b02a687c7")
  val targdir = "/tmp/test-fetch-conan-package"
  call-system(["mkdir" "-p" targdir])
  val filename = conan-download-package(cv, target_directory = targdir)

  #EXPECT(file-exists?(filename))
  delete-file(filename)

deftest(conan online) test-qualify-conan-package:
  val cv = ConanVersion("pcre/8.45")
  val options = ["build_pcre_16" => "True"
                 "build_pcre_32" => "True"
                 "build_pcre_8" => "True"
                 "build_pcrecpp" => "False"
                 "build_pcregrep" => "True"
                 "fPIC" => "True"
                 "shared" => "False"
                 "with_bzip2" => "True"
                 "with_jit" => "False"
                 "with_stack_for_recursion" => "True"
                 "with_unicode_properties" => "True"
                 "with_utf" => "True"
                 "with_zlib" => "True"]
  val fqcv = conan-fully-qualify-latest-version(cv, options = options)

  ; note that this is very dependent on what packages and revisions the server has
  val v_name = "pcre"
  val v_ver = "8.45"
  val v_recipe_rev = "125d5f684fea10391ff4cbcd809a5c74"
  val v_pkg_id = "22df55d12fd0a729491762b4508bc4ddf8b50a38"
  val v_pkg_rev = "5a5560f797885024ff7e6a48b3b7543e"
  val v_expected = "%_/%_#%_:%_#%_" % [v_name, v_ver, v_recipe_rev, v_pkg_id, v_pkg_rev]

  #EXPECT(to-string(fqcv) == to-string(v_expected))
  
